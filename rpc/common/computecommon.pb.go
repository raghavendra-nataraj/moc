// Code generated by protoc-gen-go. DO NOT EDIT.
// source: computecommon.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserType int32

const (
	UserType_ROOT UserType = 0
	UserType_USER UserType = 1
)

var UserType_name = map[int32]string{
	0: "ROOT",
	1: "USER",
}

var UserType_value = map[string]int32{
	"ROOT": 0,
	"USER": 1,
}

func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}

func (UserType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f09f9f48a46aad09, []int{0}
}

type ProcessorType int32

const (
	ProcessorType_None    ProcessorType = 0
	ProcessorType_Intel   ProcessorType = 1
	ProcessorType_Intel64 ProcessorType = 2
	ProcessorType_AMD     ProcessorType = 3
	ProcessorType_AMD64   ProcessorType = 4
	ProcessorType_ARM     ProcessorType = 5
	ProcessorType_ARM64   ProcessorType = 6
)

var ProcessorType_name = map[int32]string{
	0: "None",
	1: "Intel",
	2: "Intel64",
	3: "AMD",
	4: "AMD64",
	5: "ARM",
	6: "ARM64",
}

var ProcessorType_value = map[string]int32{
	"None":    0,
	"Intel":   1,
	"Intel64": 2,
	"AMD":     3,
	"AMD64":   4,
	"ARM":     5,
	"ARM64":   6,
}

func (x ProcessorType) String() string {
	return proto.EnumName(ProcessorType_name, int32(x))
}

func (ProcessorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f09f9f48a46aad09, []int{1}
}

type OperatingSystemBootstrapEngine int32

const (
	OperatingSystemBootstrapEngine_CLOUD_INIT           OperatingSystemBootstrapEngine = 0
	OperatingSystemBootstrapEngine_WINDOWS_ANSWER_FILES OperatingSystemBootstrapEngine = 1
)

var OperatingSystemBootstrapEngine_name = map[int32]string{
	0: "CLOUD_INIT",
	1: "WINDOWS_ANSWER_FILES",
}

var OperatingSystemBootstrapEngine_value = map[string]int32{
	"CLOUD_INIT":           0,
	"WINDOWS_ANSWER_FILES": 1,
}

func (x OperatingSystemBootstrapEngine) String() string {
	return proto.EnumName(OperatingSystemBootstrapEngine_name, int32(x))
}

func (OperatingSystemBootstrapEngine) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f09f9f48a46aad09, []int{2}
}

type OperatingSystemType int32

const (
	OperatingSystemType_WINDOWS OperatingSystemType = 0
	OperatingSystemType_LINUX   OperatingSystemType = 1
)

var OperatingSystemType_name = map[int32]string{
	0: "WINDOWS",
	1: "LINUX",
}

var OperatingSystemType_value = map[string]int32{
	"WINDOWS": 0,
	"LINUX":   1,
}

func (x OperatingSystemType) String() string {
	return proto.EnumName(OperatingSystemType_name, int32(x))
}

func (OperatingSystemType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f09f9f48a46aad09, []int{3}
}

type VirtualMachineSizeType int32

const (
	VirtualMachineSizeType_Default          VirtualMachineSizeType = 0
	VirtualMachineSizeType_Standard_A2_v2   VirtualMachineSizeType = 2
	VirtualMachineSizeType_Standard_A4_v2   VirtualMachineSizeType = 3
	VirtualMachineSizeType_Standard_D2s_v3  VirtualMachineSizeType = 4
	VirtualMachineSizeType_Standard_D4s_v3  VirtualMachineSizeType = 5
	VirtualMachineSizeType_Standard_D8s_v3  VirtualMachineSizeType = 6
	VirtualMachineSizeType_Standard_D16s_v3 VirtualMachineSizeType = 7
	VirtualMachineSizeType_Standard_D32s_v3 VirtualMachineSizeType = 8
	VirtualMachineSizeType_Standard_DS2_v2  VirtualMachineSizeType = 9
	VirtualMachineSizeType_Standard_DS3_v2  VirtualMachineSizeType = 10
	VirtualMachineSizeType_Standard_DS4_v2  VirtualMachineSizeType = 11
	VirtualMachineSizeType_Standard_DS5_v2  VirtualMachineSizeType = 12
	VirtualMachineSizeType_Standard_DS13_v2 VirtualMachineSizeType = 13
	VirtualMachineSizeType_Standard_K8S_v1  VirtualMachineSizeType = 14
	VirtualMachineSizeType_Standard_K8S2_v1 VirtualMachineSizeType = 15
	VirtualMachineSizeType_Standard_K8S3_v1 VirtualMachineSizeType = 16
	VirtualMachineSizeType_Standard_K8S4_v1 VirtualMachineSizeType = 17
	VirtualMachineSizeType_Standard_NK6     VirtualMachineSizeType = 18
	VirtualMachineSizeType_Standard_NK12    VirtualMachineSizeType = 19
	VirtualMachineSizeType_Standard_NV6     VirtualMachineSizeType = 20
	VirtualMachineSizeType_Standard_NV12    VirtualMachineSizeType = 21
	VirtualMachineSizeType_Unsupported      VirtualMachineSizeType = 99
)

var VirtualMachineSizeType_name = map[int32]string{
	0:  "Default",
	2:  "Standard_A2_v2",
	3:  "Standard_A4_v2",
	4:  "Standard_D2s_v3",
	5:  "Standard_D4s_v3",
	6:  "Standard_D8s_v3",
	7:  "Standard_D16s_v3",
	8:  "Standard_D32s_v3",
	9:  "Standard_DS2_v2",
	10: "Standard_DS3_v2",
	11: "Standard_DS4_v2",
	12: "Standard_DS5_v2",
	13: "Standard_DS13_v2",
	14: "Standard_K8S_v1",
	15: "Standard_K8S2_v1",
	16: "Standard_K8S3_v1",
	17: "Standard_K8S4_v1",
	18: "Standard_NK6",
	19: "Standard_NK12",
	20: "Standard_NV6",
	21: "Standard_NV12",
	99: "Unsupported",
}

var VirtualMachineSizeType_value = map[string]int32{
	"Default":          0,
	"Standard_A2_v2":   2,
	"Standard_A4_v2":   3,
	"Standard_D2s_v3":  4,
	"Standard_D4s_v3":  5,
	"Standard_D8s_v3":  6,
	"Standard_D16s_v3": 7,
	"Standard_D32s_v3": 8,
	"Standard_DS2_v2":  9,
	"Standard_DS3_v2":  10,
	"Standard_DS4_v2":  11,
	"Standard_DS5_v2":  12,
	"Standard_DS13_v2": 13,
	"Standard_K8S_v1":  14,
	"Standard_K8S2_v1": 15,
	"Standard_K8S3_v1": 16,
	"Standard_K8S4_v1": 17,
	"Standard_NK6":     18,
	"Standard_NK12":    19,
	"Standard_NV6":     20,
	"Standard_NV12":    21,
	"Unsupported":      99,
}

func (x VirtualMachineSizeType) String() string {
	return proto.EnumName(VirtualMachineSizeType_name, int32(x))
}

func (VirtualMachineSizeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f09f9f48a46aad09, []int{4}
}

type PowerState int32

const (
	PowerState_Unknown  PowerState = 0
	PowerState_Running  PowerState = 1
	PowerState_Off      PowerState = 2
	PowerState_Paused   PowerState = 3
	PowerState_Critical PowerState = 4
)

var PowerState_name = map[int32]string{
	0: "Unknown",
	1: "Running",
	2: "Off",
	3: "Paused",
	4: "Critical",
}

var PowerState_value = map[string]int32{
	"Unknown":  0,
	"Running":  1,
	"Off":      2,
	"Paused":   3,
	"Critical": 4,
}

func (x PowerState) String() string {
	return proto.EnumName(PowerState_name, int32(x))
}

func (PowerState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f09f9f48a46aad09, []int{5}
}

type VirtualMachineOperation int32

const (
	VirtualMachineOperation_START VirtualMachineOperation = 0
	VirtualMachineOperation_STOP  VirtualMachineOperation = 1
	VirtualMachineOperation_RESET VirtualMachineOperation = 2
)

var VirtualMachineOperation_name = map[int32]string{
	0: "START",
	1: "STOP",
	2: "RESET",
}

var VirtualMachineOperation_value = map[string]int32{
	"START": 0,
	"STOP":  1,
	"RESET": 2,
}

func (x VirtualMachineOperation) String() string {
	return proto.EnumName(VirtualMachineOperation_name, int32(x))
}

func (VirtualMachineOperation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f09f9f48a46aad09, []int{6}
}

func init() {
	proto.RegisterEnum("moc.UserType", UserType_name, UserType_value)
	proto.RegisterEnum("moc.ProcessorType", ProcessorType_name, ProcessorType_value)
	proto.RegisterEnum("moc.OperatingSystemBootstrapEngine", OperatingSystemBootstrapEngine_name, OperatingSystemBootstrapEngine_value)
	proto.RegisterEnum("moc.OperatingSystemType", OperatingSystemType_name, OperatingSystemType_value)
	proto.RegisterEnum("moc.VirtualMachineSizeType", VirtualMachineSizeType_name, VirtualMachineSizeType_value)
	proto.RegisterEnum("moc.PowerState", PowerState_name, PowerState_value)
	proto.RegisterEnum("moc.VirtualMachineOperation", VirtualMachineOperation_name, VirtualMachineOperation_value)
}

func init() { proto.RegisterFile("computecommon.proto", fileDescriptor_f09f9f48a46aad09) }

var fileDescriptor_f09f9f48a46aad09 = []byte{
	// 542 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xd3, 0x5d, 0x4f, 0xdb, 0x3c,
	0x14, 0x07, 0xf0, 0xbe, 0xd1, 0x96, 0x53, 0x5e, 0x0e, 0x2e, 0xcf, 0xb3, 0x5d, 0x71, 0x33, 0xed,
	0x26, 0xd2, 0xa8, 0xfa, 0xb2, 0x8a, 0x5d, 0x16, 0xda, 0x49, 0x19, 0x34, 0xa9, 0xe2, 0x06, 0xb6,
	0xdd, 0x44, 0x21, 0x75, 0x4b, 0xb4, 0xc6, 0x8e, 0x1c, 0x07, 0xc4, 0x3e, 0xe7, 0x3e, 0xd0, 0x64,
	0xc3, 0xba, 0x25, 0x77, 0xce, 0x4f, 0x7f, 0x1f, 0x1f, 0x29, 0xe7, 0x40, 0x37, 0x12, 0x49, 0x9a,
	0x2b, 0x16, 0x89, 0x24, 0x11, 0xfc, 0x3c, 0x95, 0x42, 0x09, 0x52, 0x4f, 0x44, 0x64, 0x9d, 0x41,
	0xdb, 0xcf, 0x98, 0x5c, 0x3e, 0xa7, 0x8c, 0xb4, 0xa1, 0xe1, 0xb9, 0xee, 0x12, 0x2b, 0xfa, 0xe4,
	0xd3, 0x99, 0x87, 0x55, 0xeb, 0x1b, 0x1c, 0x2e, 0xa4, 0x88, 0x58, 0x96, 0x89, 0x5d, 0xc8, 0x11,
	0x9c, 0x61, 0x85, 0xec, 0xc3, 0x9e, 0xcd, 0x15, 0xdb, 0x62, 0x95, 0x74, 0xa0, 0x65, 0x8e, 0xe3,
	0x11, 0xd6, 0x48, 0x0b, 0xea, 0x93, 0xf9, 0x14, 0xeb, 0x3a, 0x30, 0x99, 0x4f, 0xc7, 0x23, 0x6c,
	0x18, 0xf3, 0xe6, 0xb8, 0x67, 0xcc, 0x9b, 0x8f, 0x47, 0xd8, 0xb4, 0xbe, 0xc0, 0x99, 0x9b, 0x32,
	0x19, 0xaa, 0x98, 0x6f, 0xe8, 0x73, 0xa6, 0x58, 0x72, 0x29, 0x84, 0xca, 0x94, 0x0c, 0xd3, 0x19,
	0xdf, 0xc4, 0x9c, 0x91, 0x23, 0x80, 0xab, 0x1b, 0xd7, 0x9f, 0x06, 0xb6, 0x63, 0xeb, 0xb6, 0xde,
	0xc2, 0xe9, 0x9d, 0xed, 0x4c, 0xdd, 0x3b, 0x1a, 0x4c, 0x1c, 0x7a, 0x37, 0xf3, 0x82, 0xcf, 0xf6,
	0xcd, 0x8c, 0x62, 0xd5, 0xfa, 0x00, 0xdd, 0x52, 0x2d, 0xd3, 0x6c, 0x07, 0x5a, 0xaf, 0x17, 0x5e,
	0xfa, 0xbd, 0xb1, 0x1d, 0xff, 0x2b, 0x56, 0xad, 0x5f, 0x75, 0xf8, 0xff, 0x36, 0x96, 0x2a, 0x0f,
	0xb7, 0xf3, 0x30, 0x7a, 0x88, 0x39, 0xa3, 0xf1, 0x4f, 0xf6, 0xe7, 0xca, 0x94, 0xad, 0xc3, 0x7c,
	0xab, 0xb0, 0x42, 0x08, 0x1c, 0x51, 0x15, 0xf2, 0x55, 0x28, 0x57, 0xc1, 0x64, 0x10, 0x3c, 0x0e,
	0xb0, 0x56, 0xb4, 0x91, 0xb6, 0x3a, 0xe9, 0xc2, 0xf1, 0xce, 0xa6, 0x83, 0x2c, 0x78, 0x1c, 0x62,
	0xa3, 0x88, 0x23, 0x83, 0x7b, 0x45, 0xbc, 0x30, 0xd8, 0x24, 0xa7, 0x80, 0x7f, 0xb1, 0x3f, 0x36,
	0xda, 0x2a, 0xea, 0xf0, 0xa5, 0x6a, 0xbb, 0x58, 0x80, 0x9a, 0x9e, 0xf6, 0x4b, 0x38, 0xd4, 0x08,
	0x25, 0x34, 0x9d, 0x76, 0x4a, 0xf8, 0x51, 0xe3, 0x41, 0xf1, 0x25, 0xda, 0x37, 0xf7, 0x0f, 0x0b,
	0xd1, 0xeb, 0x0b, 0x1a, 0x3c, 0xf6, 0xf1, 0xa8, 0x10, 0xbd, 0xbe, 0xd0, 0xef, 0xf7, 0xf1, 0xb8,
	0xac, 0x43, 0xad, 0x58, 0xd6, 0x91, 0xd6, 0x13, 0x82, 0x70, 0xb0, 0x53, 0xe7, 0x7a, 0x8c, 0x84,
	0x9c, 0xc0, 0xe1, 0x3f, 0xd2, 0x1f, 0x60, 0xb7, 0x18, 0xba, 0x1d, 0xe3, 0x69, 0x31, 0x74, 0xdb,
	0x1f, 0xe0, 0x7f, 0xe4, 0x18, 0x3a, 0x3e, 0xcf, 0xf2, 0x34, 0x15, 0x52, 0xb1, 0x15, 0x46, 0x96,
	0x0d, 0xb0, 0x10, 0x4f, 0x4c, 0x52, 0x15, 0x2a, 0xf3, 0x27, 0x7d, 0xfe, 0x83, 0x8b, 0x27, 0x8e,
	0x15, 0xfd, 0xe1, 0xe5, 0x9c, 0xc7, 0x7c, 0x83, 0x55, 0x3d, 0x8d, 0xee, 0x7a, 0x8d, 0x35, 0x02,
	0xd0, 0x5c, 0x84, 0x79, 0xc6, 0x56, 0x58, 0x27, 0x07, 0xd0, 0xbe, 0x92, 0xb1, 0x8a, 0xa3, 0x70,
	0x8b, 0x0d, 0xeb, 0x13, 0xbc, 0x29, 0x0e, 0xc8, 0xeb, 0x78, 0x09, 0xae, 0xe7, 0x88, 0x2e, 0x27,
	0xde, 0xeb, 0x9e, 0xd0, 0xa5, 0xbb, 0xc0, 0xaa, 0x46, 0x6f, 0x46, 0x67, 0x4b, 0xac, 0x5d, 0xbe,
	0xff, 0xfe, 0x6e, 0x13, 0xab, 0x87, 0xfc, 0xfe, 0x3c, 0x12, 0x49, 0x2f, 0x89, 0x23, 0x29, 0x32,
	0xb1, 0x56, 0xbd, 0x44, 0x44, 0x3d, 0x99, 0x46, 0xbd, 0x97, 0x25, 0xbc, 0x6f, 0x9a, 0x2d, 0x1c,
	0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xc7, 0x6a, 0x78, 0x6f, 0x9c, 0x03, 0x00, 0x00,
}
